[{"/home/nvm/Grievance-and-Member-Interactions-Tracker/src/index.js":"1","/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/containers/App.js":"2","/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/containers/HomePage.js":"3","/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/components/NavigationLogoContainer.js":"4","/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/components/LogOnForm.js":"5","/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/containers/GrievanceListContainer.js":"6","/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/containers/GrievanceTableContainer.js":"7","/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/containers/GrievanceFormContainer.js":"8","/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/components/SignUpOverlay.js":"9","/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/components/NavigationIcons.js":"10","/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/components/GrievanceForm.js":"11","/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/components/MemberInteractionForm.js":"12","/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/components/NavigationSearchBar.js":"13","/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/components/AddSubTask.js":"14","/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/components/Pagination.js":"15"},{"size":280,"mtime":1620214548690,"results":"16","hashOfConfig":"17"},{"size":2738,"mtime":1620214548690,"results":"18","hashOfConfig":"17"},{"size":4786,"mtime":1621635783153,"results":"19","hashOfConfig":"17"},{"size":524,"mtime":1620214548690,"results":"20","hashOfConfig":"17"},{"size":5979,"mtime":1621631975966,"results":"21","hashOfConfig":"17"},{"size":4467,"mtime":1620214548690,"results":"22","hashOfConfig":"17"},{"size":7651,"mtime":1621636133282,"results":"23","hashOfConfig":"17"},{"size":665,"mtime":1620214548690,"results":"24","hashOfConfig":"17"},{"size":5254,"mtime":1620214548690,"results":"25","hashOfConfig":"17"},{"size":2229,"mtime":1620214548690,"results":"26","hashOfConfig":"17"},{"size":4607,"mtime":1620214548690,"results":"27","hashOfConfig":"17"},{"size":4430,"mtime":1620214548690,"results":"28","hashOfConfig":"17"},{"size":540,"mtime":1620214548690,"results":"29","hashOfConfig":"17"},{"size":1834,"mtime":1620214548690,"results":"30","hashOfConfig":"17"},{"size":747,"mtime":1621635800345,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"hkcomt",{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/nvm/Grievance-and-Member-Interactions-Tracker/src/index.js",[],["69","70"],"/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/containers/App.js",["71","72","73"],"import React, { useState, useEffect } from \"react\";\nimport HomePage from \"./HomePage\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport NavLogoContainer from \"../components/NavigationLogoContainer\";\nimport LogOnForm from \"../components/LogOnForm\";\n\nfunction App({ history, ...props }) {\n  //Handle User login\n  const [formValues, setFormValues] = useState({});\n  const [resJson, setResJson] = useState({});\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const { emailLogIn, passwordLogIn } = formValues;\n\n    if (!emailLogIn || !passwordLogIn) {\n      return setResJson((prev) => ({\n        ...prev,\n        [\"errors\"]: \"Please fill out both fields to login\",\n      }));\n    }\n\n    const res = await fetch(\"/users/login\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ emailLogIn, passwordLogIn }),\n    });\n    const json = await res.json();\n\n    setResJson(json);\n\n    if (json.accessToken) {\n      history.push(\"/home\");\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { id, value } = e.target;\n    setFormValues((prevValues) => ({ ...prevValues, [id]: value }));\n  };\n  useEffect(() => {\n    if (!resJson.accessToken) {\n      handleUserAuthorization();\n    }\n  }, []);\n\n  const handleUserAuthorization = async () => {\n    const response = await fetch(\"/home/token\", {\n      method: \"GET\",\n      \"Content-Type\": \"application.json\",\n      credentials: \"same-origin\",\n      \"X-Content-Type-Options\": \"nosniff\",\n    });\n\n    const json = await response.json();\n\n    setResJson(json);\n\n    if (json.accessToken) {\n      history.push(\"/home\");\n    }\n  };\n  return (\n    <div className='font-source-serif'>\n      <div>\n        <Switch>\n          <Route exact path='/'>\n            <LogOnForm\n              history={history}\n              resJson={resJson}\n              sendParentJson={setResJson}\n              handleInputChange={handleInputChange}\n              handleSubmit={handleSubmit}\n            />\n          </Route>\n          <PrivateRoute resJson={resJson} path='/home'>\n            <HomePage history={history} />\n          </PrivateRoute>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ children, ...rest }) {\n  let auth = rest.resJson;\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth.accessToken ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n","/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/containers/HomePage.js",["74"],"/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/components/NavigationLogoContainer.js",[],"/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/components/LogOnForm.js",[],"/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/containers/GrievanceListContainer.js",["75","76","77","78","79","80","81","82","83"],"import React, { useState, useEffect } from \"react\";\nimport NavLogoContainer from \"../components/NavigationLogoContainer\";\nimport NavigationIcons from \"../components/NavigationIcons.js\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst GrievanceListContainer = (props) => {\n  \n  return (\n    <div className='main-gradient h-screen'>\n      <NavLogoContainer />\n      <div className='w-full text-center my-3'>\n        <h3 className='relative text-blue-900 font-bold'>\n          Welcome {props.displayName}\n          {props.image ? (\n            <img\n              className='h-7 w-7 rounded-full absolute right-10 -top-1'\n              src={props.image}\n              alt='User profile from google'\n            />\n          ) : null}\n        </h3>\n      </div>\n      <NavigationIcons />\n      <div className='mx-1 pb-2 mt-5'>\n        <ol className='flex flex-col space-y-2 w-3/4 m-auto'>\n          <li className='justify-procedure-list'>\n            <div className='relative'>\n              <FontAwesomeIcon\n                className='absolute -left-3 top-1'\n                icon={faAngleRight}\n              />\n              <a onClick={props.handleMeetingListClick}>\n                <p className='inline-block' id='total'>\n                  Inbox Total\n                </p>\n              </a>\n            </div>\n            <span className='task-number-icon-blue'>\n              {props.meetings.length}\n            </span>\n          </li>\n          <li className='justify-procedure-list'>\n            <a onClick={props.handleMeetingListClick}>\n              <p className='inline-block' id='incidentsAndInteractions'>\n                Incidents and Interactions\n              </p>\n            </a>\n            <span className='task-number-icon-blue'>\n              {props.incidentsAndInteractions.length}\n            </span>\n          </li>\n          <li className='justify-procedure-list' id='stepOnes'>\n            <a onClick={props.handleMeetingListClick}>\n              <p className='inline-block' id='stepOnes'>\n                Step 1\n              </p>\n            </a>\n            <span className='task-number-icon-blue'>\n              {props.stepOnes.length}\n            </span>\n          </li>\n          <li className='justify-procedure-list'>\n            <a onClick={props.handleMeetingListClick}>\n              <p className='inline-block' id='stepTwos'>\n                Step 2\n              </p>\n            </a>\n            <span className='task-number-icon-blue'>\n              {props.stepTwos.length}\n            </span>\n          </li>\n          <li className='justify-procedure-list'>\n            <a onClick={props.handleMeetingListClick}>\n              <p className='inline-block' id='stepTwoToArbitration'>\n                Step 2 to Arbitration\n              </p>\n            </a>\n            <span className='task-number-icon-blue'>\n              {props.stepTwoToArbitrations.length}\n            </span>\n          </li>\n          <li className='justify-procedure-list'>\n            <a onClick={props.handleMeetingListClick}>\n              <p className='inline-block' id='stepThreeAppeal'>\n                Step 3 Appeal\n              </p>\n            </a>\n            <span className='task-number-icon-blue'>\n              {props.stepThreeAppeal.length}\n            </span>\n          </li>\n          <li className='justify-procedure-list'>\n            <a onClick={props.handleMeetingListClick}>\n              <p className='inline-block' id='miscellaneous'>\n                Miscellaneous\n              </p>\n            </a>\n            <span className='task-number-icon-blue'>\n              {props.miscellaneous.length}\n            </span>\n          </li>\n        </ol>\n        <div className='mt-3 mx-1 pb-2'>\n          <ol className='w-3/4 m-auto'>\n            <div>\n              <input type='checkbox' name='today' className='' />\n              <li className='inline-block ml-2'>Today</li>\n            </div>\n            <div>\n              <input type='checkbox' name='next week' className='' />\n              <li className='inline-block ml-2'>Next 5 days</li>\n            </div>\n            <div>\n              <input type='checkbox' name='next week' className='' />\n              <li className='inline-block ml-2'>Next 14 days</li>\n            </div>\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GrievanceListContainer;\n","/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/containers/GrievanceTableContainer.js",["84","85","86","87","88","89"],"/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/containers/GrievanceFormContainer.js",["90"],"import React, { useState } from \"react\";\nimport MemberInteractionForm from \"../components/MemberInteractionForm\";\nimport GrievanceForm from \"../components/GrievanceForm\";\n\nconst GrievanceFormContainer = ({ selectedEvent }) => {\n  console.log(\"selected event in form\", selectedEvent);\n\n  return (\n    <div className='w-full h-screen'>\n      {selectedEvent.meetingType === \"Incidents and Interactions\" ? (\n        <MemberInteractionForm selectedEvent={selectedEvent} />\n      ) : null}\n      {selectedEvent.meetingType === \"Step 1\" ? (\n        <GrievanceForm selectedEvent={selectedEvent} />\n      ) : null}\n    </div>\n  );\n};\n\nexport default GrievanceFormContainer;\n","/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/components/SignUpOverlay.js",["91","92","93","94"],"import React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { withRouter } from \"react-router-dom\";\n\nconst SignUpOverlay = ({history ,...props}) => {\n \n  const [formValues, setFormValues] = useState({});\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    console.log(\"got here submit==>>\", formValues);\n\n    const { email, confirmEmail, password, confirmPassword } = formValues;\n\n    if (email !== confirmEmail) {\n      return props.sendParentJson((prev) => ({\n        ...prev,\n        [\"registrationErrors\"]: \"Email fields don't match\",\n      }));\n    }\n\n    if (password !== confirmPassword) {\n      return props.sendParentJson((prev) => ({\n        ...prev,\n        [\"registrationErrors\"]: \"Password fields don't match\",\n      }));\n    }\n\n    if (password.length < 6 || confirmPassword.length < 6) {\n      return props.sendParentJson((prev) => ({\n        ...prev,\n        [\"registrationErrors\"]: \"Password should be longer than 6 characters\",\n      }));\n    }\n\n    const res = await fetch(\"/users/register\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, fullName, password }),\n    });\n    const json = await res.json();\n\n    props.sendParentJson(json);\n    \n    if (json.accessToken) {\n      history.push(\"/home\");\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { id, value } = e.target;\n    setFormValues((prevValues) => ({ ...prevValues, [id]: value }));\n  };\n\n  const {\n    fullName,\n    email,\n    confirmEmail,\n    password,\n    confirmPassword,\n  } = formValues;\n\n\n  return (\n    <div className='bg-black bg-opacity-75 absolute z-10 h-screen w-full top-0 left-0'>\n      <FontAwesomeIcon\n        className='text-2xl text-white absolute right-7 top-3'\n        icon={faTimes}\n        onClick={props.onCloseOverlayClick}\n      />\n      <form\n        className='w-3/4  m-auto relative top-1/2 transform -translate-y-2/4'\n        onSubmit={handleSubmit}\n        method='post'\n      >\n        <h3 className='text-white text-2xl pb-5'>Create your Account</h3>\n\n        {props.parentJson.registrationErrors ? (\n          <h3 className='text-red-900  text-1xl mb-5 w-3/4'>\n            {props.parentJson.registrationErrors}\n          </h3>\n        ) : null}\n        {props.parentJson.registeredUserExist ? (\n          <h3 className='text-red-900  text-1xl mb-5 w-3/4 '>\n            {props.parentJson.registeredUserExist}\n          </h3>\n        ) : null}\n        {props.parentJson.registrationLogInReady ? (\n          <h3 className='text-green-500 text-1xl mb-5 '>\n            {props.parentJson.registrationLogInReady}\n          </h3>\n        ) : null}\n        <div className='mb-9'>\n          <label className='block text-white font-bold' htmlFor='email'>\n            Name(First and Last):\n          </label>\n          <input\n            className='text-black font-medium '\n            type='text'\n            name='fullName'\n            id='fullName'\n            value={fullName || \"\"}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div className='my-3'>\n          <label className='block text-white font-bold' htmlFor='email'>\n            Email:\n          </label>\n          <input\n            className='text-black font-medium '\n            type='email'\n            name='email'\n            id='email'\n            value={email || \"\"}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div className='mb-9'>\n          <label className='block text-white font-bold' htmlFor='email2'>\n            Confirm Email:\n          </label>\n          <input\n            className='text-black font-medium '\n            type='email'\n            name='confirmEmail'\n            id='confirmEmail'\n            value={confirmEmail || \"\"}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div className='mb-3'>\n          <label className='block text-white font-bold' htmlFor='password'>\n            Password:\n          </label>\n          <input\n            className='text-black font-medium '\n            type='password'\n            name='password'\n            id='password'\n            value={password || \"\"}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div className=''>\n          <label className='block text-white font-bold' htmlFor='password2'>\n            Confirm Password:\n          </label>\n          <input\n            className='text-black font-medium '\n            type='password'\n            name='confirmPassword'\n            id='confirmPassword'\n            value={confirmPassword || \"\"}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div>\n          <button\n            type='submit'\n            className='border border-solid rounded-md border-black  px-2 py-1 border-opacity-30 my-4 bg-indigo-500 text-white font-bold'\n          >\n            Submit!\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default withRouter(SignUpOverlay);\n","/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/components/NavigationIcons.js",[],"/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/components/GrievanceForm.js",["95"],"import React, {useState} from \"react\";\nimport AddSubTask from \"./AddSubTask\";\n\nconst GrievanceForm = (props) => {\n  const { selectedEvent } = props;\nconst [formValues, setFormValues] = useState({});\nconst [resJson, setResJson] = useState({});\n\nconst handleInputChange = (e) => {\n  const { id, value } = e.target;\n  console.log(id, \": \", value);\n  setFormValues((prev) => ({ ...prev, [id]: value }));\n};\nconst handleSubmit = async (e) => {\n  e.preventDefault();\n\n  const {\n    meetingName,\n    meetingType,\n    meetingDate,\n    reminder,\n    extension,\n    description,\n  } = formValues;\n  if (!meetingName) {\n    setResJson({ errors: \"Please include a meeting name at the top.\" });\n  }\n  if (!meetingType) {\n    setResJson({ errors: \"Please include a Meeting Type\" });\n  }\n  if (!description) {\n    setResJson({ errors: \"Please include a description\" });\n  }\n\n  const response = await fetch(\"/add/meeting\", {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      meetingName,\n      meetingType,\n      meetingDate,\n      reminder,\n      extension,\n      description,\n    }),\n  });\n\n  const json = await response.json();\n\n  setResJson(json);\n\n  console.log(json, resJson, \"I submitted\");\n};\n  return (\n    <div className='bg-blue-100 px-3 pt-5 relative '>\n      <form\n        action='/add/meeting'\n        onSubmit={handleSubmit}\n        className='text-center'\n        method='post'\n      >\n        <input\n          type='submit'\n          className='text-1xl p-2 absolute right-0 top-2 bg-blue-400 border-2 rounded-lg'\n          value='Save'\n        />\n        {resJson.message && (\n          <h3 className='text-red-900 font-bold text-2xl relative bottom-2 text-center w-3/4 '>\n            {resJson.message}\n          </h3>\n        )}\n\n        <div className='mt-3 w-full flex space-x-3'>\n          <div className='relative top-6'>\n            <label className='block text-left font-bold' htmlFor='tasks'>\n              Event Type:{\" \"}\n            </label>\n            <select\n              className='bg-white w-full block h-7 '\n              name='meetingType'\n              id='meetingType'\n              onChange={handleInputChange}\n            >\n              <option value=''>Event Type?</option>\n              <option value='Member Interaction'>Member Interaction</option>\n              <option value='Incident'>Incident</option>\n              <option value='Step 1'>Step 1</option>\n              <option value='Step 2'>Step 2</option>\n              <option value='Step 2 to Arbitration'>\n                Step 2 to Arbitration\n              </option>\n              <option value='Step 3 Appeal'>Step 3 Appeal</option>\n              <option value='Miscellaneous'>Miscellaneous</option>\n            </select>\n          </div>\n          <div className=''>\n            <label className='text-left block font-bold' htmlFor='meetingDate'>\n              Actual Date of Meeting:\n            </label>\n            <input\n              className='w-full block'\n              type='date'\n              name='meetingDate'\n              id='meetingDate'\n              onChange={handleInputChange}\n            />\n          </div>\n        </div>\n        <div className='flex mt-3 relative w-full space-x-3'>\n          <div className='relative top-6'>\n            <label htmlFor='reminder' className='block text-left font-bold'>\n              Reminder:\n            </label>\n            <input\n              type='date'\n              name='reminder'\n              className='w-full bg-white block'\n              id='reminder'\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className='text-left'>\n            <label className='block font-bold' htmlFor='extension'>\n              Extension Date:<span className='block'>(If Applicable)</span>\n            </label>\n            <input\n              className='w-full block'\n              type='date'\n              name='extension'\n              id='extension'\n              onChange={handleInputChange}\n            />\n          </div>\n        </div>\n        <div className='mt-3 '>\n          <label\n            className='block w-full text-left font-bold'\n            htmlFor='description'\n          >\n            Description:\n          </label>\n          <textarea\n            name='description'\n            className='w-full'\n            cols='30'\n            rows='10'\n            id='description'\n            onChange={handleInputChange}\n          ></textarea>\n        </div>\n      </form>\n      <AddSubTask />\n    </div>\n  );\n};\n\nexport default GrievanceForm;\n","/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/components/MemberInteractionForm.js",["96"],"import React, { useState } from \"react\";\nimport AddSubTask from \"./AddSubTask\";\n\nconst MemberInteractionForm = (props) => {\n  let dateRegEx = props.selectedEvent.actualDateOfEvent.replace(\n    /(T)00:00:00.000Z/g, \" \"\n  )\n  .replace(/(\\d{4})-(\\d{2})-(\\d{2})/, function (match, p1,p2,p3) {\n    return [p1,p2,p3].join(\",\")\n  });\n  let dateOfEventProperFormat = (eventDate) => {\n    let date = new Date(eventDate);\n    let formatDate = `${date.getFullYear()}-0${date.getMonth() + 1}-${\n      date.getDate()\n    }`;\n      console.log(dateRegEx)\n      return formatDate;\n    }\n  \n  const { selectedEvent } = props;\n  const [formValues, setFormValues] = useState({});\n  const [resJson, setResJson] = useState({});\n\n  const handleInputChange = (e) => {\n    const { id, value } = e.target;\n    console.log(id, \": \", value);\n    setFormValues((prev) => ({ ...prev, [id]: value }));\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const {\n      meetingName,\n      meetingType,\n      meetingDate,\n      reminder,\n      extension,\n      description,\n    } = formValues;\n    if (!meetingName) {\n      setResJson({ errors: \"Please include a meeting name at the top.\" });\n    }\n    if (!meetingType) {\n      setResJson({ errors: \"Please include a Meeting Type\" });\n    }\n    if (!description) {\n      setResJson({ errors: \"Please include a description\" });\n    }\n\n    const response = await fetch(\"/add/member-interaction\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        meetingName,\n        meetingDate,\n        reminder,\n        description,\n      }),\n    });\n\n    const json = await response.json();\n\n    setResJson(json);\n\n    console.log(json, resJson, \"I submitted\");\n  };\n  return (\n    <div className='main-gradient px-3 pt-5 relative '>\n      <h3 className='font-bold'>Event Type: {selectedEvent.meetingType}</h3>\n      <form\n        action='/add/meeting'\n        onSubmit={handleSubmit}\n        className='text-center'\n        method='post'\n      >\n        <input\n          type='submit'\n          className='text-1xl p-2 absolute right-2 top-1  bg-blue-400 border-2 rounded-lg'\n          value='Save'\n        />\n        {resJson.message && (\n          <h3 className='text-red-900 font-bold text-2xl relative bottom-2 text-center w-3/4 '>\n            {resJson.message}\n          </h3>\n        )}\n\n        <div className='mt-3 flex space-x-3'>\n          <div className='mb-3'>\n            <label\n              className='text-left block font-bold'\n              htmlFor='meetingName'\n            ></label>\n            <input\n              className='block'\n              type='text'\n              name='meetingName'\n              id='meetingName'\n              value={props.selectedEvent.meetingName}\n              onChange={handleInputChange}\n            />\n          </div>\n        </div>\n        <div className='mt-3 flex space-x-3'>\n          <div className='mb-3'>\n            <label className='text-left block font-bold' htmlFor='meetingDate'>\n              Date of Interaction:\n            </label>\n            <input\n              className='block'\n              type='date'\n              name='meetingDate'\n              id='meetingDate'\n              onChange={handleInputChange}\n              value={dateOfEventProperFormat(\n                dateRegEx\n              )}\n            />\n          </div>\n        </div>\n        <div className='flex'>\n          <div className='mb-5'>\n            <label htmlFor='reminder' className='block text-left font-bold'>\n              Reminder:\n            </label>\n            <input\n              type='date'\n              name='reminder'\n              className='w-full bg-white block'\n              id='reminder'\n              onChange={handleInputChange}\n            />\n          </div>\n        </div>\n        <div className='mt-3 '>\n          <label\n            className='block w-full text-left font-bold'\n            htmlFor='description'\n          >\n            Description:\n          </label>\n          <textarea\n            name='description'\n            className='w-full'\n            cols='30'\n            rows='10'\n            id='description'\n            value={props.selectedEvent.description}\n            onChange={handleInputChange}\n          ></textarea>\n        </div>\n      </form>\n      <AddSubTask />\n    </div>\n  );\n};\n\nexport default MemberInteractionForm;\n","/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/components/NavigationSearchBar.js",[],"/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/components/AddSubTask.js",[],"/home/nvm/Grievance-and-Member-Interactions-Tracker/src/client/components/Pagination.js",["97"],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":24},{"ruleId":"106","severity":1,"message":"107","line":20,"column":9,"nodeType":"108","messageId":"109","endLine":20,"endColumn":59,"fix":"110"},{"ruleId":"111","severity":1,"message":"112","line":48,"column":6,"nodeType":"113","endLine":48,"endColumn":8,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":58,"column":5,"nodeType":"117","messageId":"118","endLine":87,"endColumn":6},{"ruleId":"102","severity":1,"message":"119","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"120","line":1,"column":27,"nodeType":"104","messageId":"105","endLine":1,"endColumn":36},{"ruleId":"121","severity":1,"message":"122","line":35,"column":15,"nodeType":"123","endLine":35,"endColumn":57},{"ruleId":"121","severity":1,"message":"122","line":46,"column":13,"nodeType":"123","endLine":46,"endColumn":55},{"ruleId":"121","severity":1,"message":"122","line":56,"column":13,"nodeType":"123","endLine":56,"endColumn":55},{"ruleId":"121","severity":1,"message":"122","line":66,"column":13,"nodeType":"123","endLine":66,"endColumn":55},{"ruleId":"121","severity":1,"message":"122","line":76,"column":13,"nodeType":"123","endLine":76,"endColumn":55},{"ruleId":"121","severity":1,"message":"122","line":86,"column":13,"nodeType":"123","endLine":86,"endColumn":55},{"ruleId":"121","severity":1,"message":"122","line":96,"column":13,"nodeType":"123","endLine":96,"endColumn":55},{"ruleId":"102","severity":1,"message":"124","line":9,"column":10,"nodeType":"104","messageId":"105","endLine":9,"endColumn":25},{"ruleId":"106","severity":1,"message":"125","line":32,"column":9,"nodeType":"108","messageId":"109","endLine":32,"endColumn":55,"fix":"126"},{"ruleId":"106","severity":1,"message":"125","line":36,"column":30,"nodeType":"108","messageId":"109","endLine":36,"endColumn":54,"fix":"127"},{"ruleId":"106","severity":1,"message":"128","line":42,"column":9,"nodeType":"108","messageId":"109","endLine":42,"endColumn":61,"fix":"129"},{"ruleId":"102","severity":1,"message":"130","line":46,"column":11,"nodeType":"104","messageId":"105","endLine":46,"endColumn":19},{"ruleId":"131","severity":1,"message":"132","line":58,"column":5,"nodeType":"133","messageId":"134","endLine":60,"endColumn":6},{"ruleId":"102","severity":1,"message":"119","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"120","line":1,"column":27,"nodeType":"104","messageId":"105","endLine":1,"endColumn":36},{"ruleId":"106","severity":1,"message":"135","line":20,"column":9,"nodeType":"108","messageId":"109","endLine":20,"endColumn":59,"fix":"136"},{"ruleId":"106","severity":1,"message":"135","line":27,"column":9,"nodeType":"108","messageId":"109","endLine":27,"endColumn":62,"fix":"137"},{"ruleId":"106","severity":1,"message":"135","line":34,"column":9,"nodeType":"108","messageId":"109","endLine":34,"endColumn":78,"fix":"138"},{"ruleId":"102","severity":1,"message":"139","line":5,"column":11,"nodeType":"104","messageId":"105","endLine":5,"endColumn":24},{"ruleId":"102","severity":1,"message":"140","line":37,"column":7,"nodeType":"104","messageId":"105","endLine":37,"endColumn":16},{"ruleId":"121","severity":1,"message":"141","line":16,"column":21,"nodeType":"123","endLine":16,"endColumn":93},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'NavLogoContainer' is defined but never used.","Identifier","unusedVar","no-useless-computed-key","Unnecessarily computed property [\"errors\"] found.","Property","unnecessarilyComputedProperty",{"range":"144","text":"145"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleUserAuthorization' and 'resJson.accessToken'. Either include them or remove the dependency array.","ArrayExpression",["146"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'isAddNewClicked' is assigned a value but never used.","Unnecessarily computed property [\"eventNameMissing\"] found.",{"range":"147","text":"148"},{"range":"149","text":"148"},"Unnecessarily computed property [\"meetingTypeMissing\"] found.",{"range":"150","text":"151"},"'response' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Unnecessarily computed property [\"registrationErrors\"] found.",{"range":"152","text":"153"},{"range":"154","text":"153"},{"range":"155","text":"153"},"'selectedEvent' is assigned a value but never used.","'extension' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",[659,669],"\"errors\"",{"desc":"156","fix":"157"},[1018,1038],"\"eventNameMissing\"",[1112,1132],[1283,1305],"\"meetingTypeMissing\"",[631,653],"\"registrationErrors\"",[813,835],[1019,1041],"Update the dependencies array to be: [handleUserAuthorization, resJson.accessToken]",{"range":"158","text":"159"},[1305,1307],"[handleUserAuthorization, resJson.accessToken]"]