[{"/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/index.js":"1","/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/containers/App.js":"2","/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/containers/HomePage.js":"3","/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/components/LogOnForm.js":"4","/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/components/NavigationLogoContainer.js":"5","/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/containers/GrievanceListContainer.js":"6","/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/containers/GrievanceFormContainer.js":"7","/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/containers/GrievanceTableContainer.js":"8","/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/components/SignUpOverlay.js":"9","/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/components/NavigationIcons.js":"10","/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/components/GrievanceForm.js":"11","/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/components/MemberInteractionForm.js":"12","/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/components/NavigationSearchBar.js":"13","/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/components/AddSubTask.js":"14"},{"size":280,"mtime":1616703552132,"results":"15","hashOfConfig":"16"},{"size":2738,"mtime":1616703552132,"results":"17","hashOfConfig":"16"},{"size":4446,"mtime":1616703552132,"results":"18","hashOfConfig":"16"},{"size":5979,"mtime":1616703552132,"results":"19","hashOfConfig":"16"},{"size":524,"mtime":1616703552132,"results":"20","hashOfConfig":"16"},{"size":4467,"mtime":1616703552132,"results":"21","hashOfConfig":"16"},{"size":657,"mtime":1616703552132,"results":"22","hashOfConfig":"16"},{"size":4514,"mtime":1617033943341,"results":"23","hashOfConfig":"16"},{"size":5254,"mtime":1616703552132,"results":"24","hashOfConfig":"16"},{"size":2229,"mtime":1616703552132,"results":"25","hashOfConfig":"16"},{"size":4607,"mtime":1616703552132,"results":"26","hashOfConfig":"16"},{"size":4521,"mtime":1616703552132,"results":"27","hashOfConfig":"16"},{"size":540,"mtime":1616703552132,"results":"28","hashOfConfig":"16"},{"size":1834,"mtime":1616703552132,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"lvcy2r",{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/index.js",[],["66","67"],"/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/containers/App.js",["68","69","70"],"import React, { useState, useEffect } from \"react\";\nimport HomePage from \"./HomePage\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport NavLogoContainer from \"../components/NavigationLogoContainer\";\nimport LogOnForm from \"../components/LogOnForm\";\n\nfunction App({ history, ...props }) {\n  //Handle User login\n  const [formValues, setFormValues] = useState({});\n  const [resJson, setResJson] = useState({});\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const { emailLogIn, passwordLogIn } = formValues;\n\n    if (!emailLogIn || !passwordLogIn) {\n      return setResJson((prev) => ({\n        ...prev,\n        [\"errors\"]: \"Please fill out both fields to login\",\n      }));\n    }\n\n    const res = await fetch(\"/users/login\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ emailLogIn, passwordLogIn }),\n    });\n    const json = await res.json();\n\n    setResJson(json);\n\n    if (json.accessToken) {\n      history.push(\"/home\");\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { id, value } = e.target;\n    setFormValues((prevValues) => ({ ...prevValues, [id]: value }));\n  };\n  useEffect(() => {\n    if (!resJson.accessToken) {\n      handleUserAuthorization();\n    }\n  }, []);\n\n  const handleUserAuthorization = async () => {\n    const response = await fetch(\"/home/token\", {\n      method: \"GET\",\n      \"Content-Type\": \"application.json\",\n      credentials: \"same-origin\",\n      \"X-Content-Type-Options\": \"nosniff\",\n    });\n\n    const json = await response.json();\n\n    setResJson(json);\n\n    if (json.accessToken) {\n      history.push(\"/home\");\n    }\n  };\n  return (\n    <div className='font-source-serif'>\n      <div>\n        <Switch>\n          <Route exact path='/'>\n            <LogOnForm\n              history={history}\n              resJson={resJson}\n              sendParentJson={setResJson}\n              handleInputChange={handleInputChange}\n              handleSubmit={handleSubmit}\n            />\n          </Route>\n          <PrivateRoute resJson={resJson} path='/home'>\n            <HomePage history={history} />\n          </PrivateRoute>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ children, ...rest }) {\n  let auth = rest.resJson;\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth.accessToken ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n","/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/containers/HomePage.js",["71"],"import { React, useState, useEffect } from \"react\";\nimport GrievanceListContainer from \"./GrievanceListContainer.js\";\nimport GrievanceTableContainer from \"./GrievanceTableContainer\";\nimport GrievanceFormContainer from \"./GrievanceFormContainer\";\n\n\nconst HomePage = ({ history, ...props }) => {\n  const [displayName, setDisplayName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [meetings, setMeetings] = useState([]);\n  const [listType, setListType] = useState([]);\n  const [listName, setListName] = useState(\"\");\n  const [selectedEvent, setSelectedEvent] = useState(null);\n\n  //Profile information is brought in from /server/routers/index.js\n\n  useEffect(() => {\n    loadProfile();\n    loadMeetings();\n  }, []);\n\n  const loadProfile = async () => {\n    const response = await fetch(\"/home/token\", {\n      method: \"GET\",\n      credentials: \"same-origin\",\n    });\n    const data = await response.json();\n\n    //Show the currents user name and display image\n    setDisplayName(\n      data.displayName\n        .toLowerCase()\n        .replace(/(\\w{1})(\\w+)/g, function replacer(match, p1, p2) {\n          return [p1.toUpperCase(), p2, \" \"].join(\"\");\n        })\n    );\n    setImage(data.image);\n  };\n\n  //Load all user meetings from the Databas\n  const loadMeetings = async () => {\n    let response = await fetch(\"home/meetings\", {\n      method: \"GET\",\n      credentials: \"same-origin\",\n    });\n\n    let data = await response.json();\n    console.log(data.userTasks, \"heres the data from /home/meetings\");\n\n    setMeetings([...data.userTasks]);\n  };\n\n  const handleMeetingListClick = (e) => {\n    switch (e.target.id) {\n      case \"total\":\n        setListType(meetings);\n        setListName(\"View All\");\n        break;\n      case \"incidentsAndInteractions\":\n        setListType(incidentsAndInteractions);\n        setListName(\"Incidents and Interactions\");\n        break;\n      case \"stepOnes\":\n        setListType(stepOnes);\n        setListName(\"Step 1 Events\");\n        break;\n      case \"stepTwos\":\n        setListType(stepTwos);\n        setListName(\"Step 2 Events\");\n        break;\n      case \"stepTwoToArbitration\":\n        setListType(stepTwoToArbitrations);\n        setListName(\"Step 2 to Arbitration Events\");\n        break;\n      case \"stepThreeAppeal\":\n        setListType(stepThreeAppeal);\n        setListName(\"Step 3 to Appeal Events\");\n        break;\n      case \"miscellaneous\":\n        setListType(miscellaneous);\n        setListName(\"Miscellaneous Events\");\n        break;\n    }\n  };\n\n  const handleEventRowClick = (event) => {\n    setSelectedEvent(event);\n  };\n\n\n  let incidentsAndInteractions = meetings.reduce((acc, cur) => {\n    if (\n      cur.meetingType === \"Member Interaction\" ||\n      cur.meetingType === \"Incident\"\n    ) {\n      acc.push(cur);\n    }\n    return acc;\n  }, []);\n\n  let stepOnes = meetings.reduce((acc, cur) => {\n    if (cur.meetingType === \"Step 1\") {\n      acc.push(cur);\n    }\n    return acc;\n  }, []);\n\n  let stepTwos = meetings.reduce((acc, cur) => {\n    if (cur.meetingType === \"Step 2\") {\n      acc.push(cur);\n    }\n    return acc;\n  }, []);\n\n  let stepTwoToArbitrations = meetings.reduce((acc, cur) => {\n    if (cur.meetingType === \"Step 2 to Arbitration\") {\n      acc.push(cur);\n    }\n    return acc;\n  }, []);\n\n  let stepThreeAppeal = meetings.reduce((acc, cur) => {\n    if (cur.meetingType === \"Step 3 Appeal\") {\n      acc.push(cur);\n    }\n    return acc;\n  }, []);\n\n  let miscellaneous = meetings.reduce((acc, cur) => {\n    if (cur.meetingType === \"Miscellaneous\") {\n      acc.push(cur);\n    }\n    return acc;\n  }, []);\n  return (\n    /*This component contains the entire app*/\n    <div className='main-gradient pt-2'>\n      <GrievanceListContainer\n        displayName={displayName}\n        image={image}\n        meetings={meetings}\n        handleMeetingListClick={handleMeetingListClick}\n        incidentsAndInteractions={incidentsAndInteractions}\n        stepOnes={stepOnes}\n        stepTwos={stepTwos}\n        stepTwoToArbitrations={stepTwoToArbitrations}\n        stepThreeAppeal={stepThreeAppeal}\n        miscellaneous={miscellaneous}\n      />\n      <GrievanceTableContainer\n        listType={listType}\n        listName={listName}\n        handleEventRowClick={handleEventRowClick}\n        selectedEvent={selectedEvent}\n      />\n      {selectedEvent ? (\n        <GrievanceFormContainer selectedEvent={selectedEvent} />\n      ) : null}\n    </div>\n  );\n};\n\nexport default HomePage;\n","/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/components/LogOnForm.js",[],"/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/components/NavigationLogoContainer.js",[],"/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/containers/GrievanceListContainer.js",["72","73","74","75","76","77","78","79","80"],"import React, { useState, useEffect } from \"react\";\nimport NavLogoContainer from \"../components/NavigationLogoContainer\";\nimport NavigationIcons from \"../components/NavigationIcons.js\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst GrievanceListContainer = (props) => {\n  \n  return (\n    <div className='main-gradient h-screen'>\n      <NavLogoContainer />\n      <div className='w-full text-center my-3'>\n        <h3 className='relative text-blue-900 font-bold'>\n          Welcome {props.displayName}\n          {props.image ? (\n            <img\n              className='h-7 w-7 rounded-full absolute right-10 -top-1'\n              src={props.image}\n              alt='User profile from google'\n            />\n          ) : null}\n        </h3>\n      </div>\n      <NavigationIcons />\n      <div className='mx-1 pb-2 mt-5'>\n        <ol className='flex flex-col space-y-2 w-3/4 m-auto'>\n          <li className='justify-procedure-list'>\n            <div className='relative'>\n              <FontAwesomeIcon\n                className='absolute -left-3 top-1'\n                icon={faAngleRight}\n              />\n              <a onClick={props.handleMeetingListClick}>\n                <p className='inline-block' id='total'>\n                  Inbox Total\n                </p>\n              </a>\n            </div>\n            <span className='task-number-icon-blue'>\n              {props.meetings.length}\n            </span>\n          </li>\n          <li className='justify-procedure-list'>\n            <a onClick={props.handleMeetingListClick}>\n              <p className='inline-block' id='incidentsAndInteractions'>\n                Incidents and Interactions\n              </p>\n            </a>\n            <span className='task-number-icon-blue'>\n              {props.incidentsAndInteractions.length}\n            </span>\n          </li>\n          <li className='justify-procedure-list' id='stepOnes'>\n            <a onClick={props.handleMeetingListClick}>\n              <p className='inline-block' id='stepOnes'>\n                Step 1\n              </p>\n            </a>\n            <span className='task-number-icon-blue'>\n              {props.stepOnes.length}\n            </span>\n          </li>\n          <li className='justify-procedure-list'>\n            <a onClick={props.handleMeetingListClick}>\n              <p className='inline-block' id='stepTwos'>\n                Step 2\n              </p>\n            </a>\n            <span className='task-number-icon-blue'>\n              {props.stepTwos.length}\n            </span>\n          </li>\n          <li className='justify-procedure-list'>\n            <a onClick={props.handleMeetingListClick}>\n              <p className='inline-block' id='stepTwoToArbitration'>\n                Step 2 to Arbitration\n              </p>\n            </a>\n            <span className='task-number-icon-blue'>\n              {props.stepTwoToArbitrations.length}\n            </span>\n          </li>\n          <li className='justify-procedure-list'>\n            <a onClick={props.handleMeetingListClick}>\n              <p className='inline-block' id='stepThreeAppeal'>\n                Step 3 Appeal\n              </p>\n            </a>\n            <span className='task-number-icon-blue'>\n              {props.stepThreeAppeal.length}\n            </span>\n          </li>\n          <li className='justify-procedure-list'>\n            <a onClick={props.handleMeetingListClick}>\n              <p className='inline-block' id='miscellaneous'>\n                Miscellaneous\n              </p>\n            </a>\n            <span className='task-number-icon-blue'>\n              {props.miscellaneous.length}\n            </span>\n          </li>\n        </ol>\n        <div className='mt-3 mx-1 pb-2'>\n          <ol className='w-3/4 m-auto'>\n            <div>\n              <input type='checkbox' name='today' className='' />\n              <li className='inline-block ml-2'>Today</li>\n            </div>\n            <div>\n              <input type='checkbox' name='next week' className='' />\n              <li className='inline-block ml-2'>Next 5 days</li>\n            </div>\n            <div>\n              <input type='checkbox' name='next week' className='' />\n              <li className='inline-block ml-2'>Next 14 days</li>\n            </div>\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GrievanceListContainer;\n","/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/containers/GrievanceFormContainer.js",["81"],"import React, { useState } from \"react\";\nimport MemberInteractionForm from \"../components/MemberInteractionForm\";\nimport GrievanceForm from \"../components/GrievanceForm\";\n\nconst GrievanceFormContainer = ({ selectedEvent }) => {\n  console.log(\"selected event in form\", selectedEvent);\n\n  return (\n    <div className='w-full h-screen'>\n      {selectedEvent.meetingType === \"Member Interaction\" ? (\n        <MemberInteractionForm selectedEvent={selectedEvent} />\n      ) : null}\n      {selectedEvent.meetingType === \"Step 1\" ? (\n        <GrievanceForm selectedEvent={selectedEvent} />\n      ) : null}\n    </div>\n  );\n};\n\nexport default GrievanceFormContainer;\n","/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/containers/GrievanceTableContainer.js",["82","83","84"],"/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/components/SignUpOverlay.js",["85","86","87","88"],"import React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { withRouter } from \"react-router-dom\";\n\nconst SignUpOverlay = ({history ,...props}) => {\n \n  const [formValues, setFormValues] = useState({});\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    console.log(\"got here submit==>>\", formValues);\n\n    const { email, confirmEmail, password, confirmPassword } = formValues;\n\n    if (email !== confirmEmail) {\n      return props.sendParentJson((prev) => ({\n        ...prev,\n        [\"registrationErrors\"]: \"Email fields don't match\",\n      }));\n    }\n\n    if (password !== confirmPassword) {\n      return props.sendParentJson((prev) => ({\n        ...prev,\n        [\"registrationErrors\"]: \"Password fields don't match\",\n      }));\n    }\n\n    if (password.length < 6 || confirmPassword.length < 6) {\n      return props.sendParentJson((prev) => ({\n        ...prev,\n        [\"registrationErrors\"]: \"Password should be longer than 6 characters\",\n      }));\n    }\n\n    const res = await fetch(\"/users/register\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, fullName, password }),\n    });\n    const json = await res.json();\n\n    props.sendParentJson(json);\n    \n    if (json.accessToken) {\n      history.push(\"/home\");\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { id, value } = e.target;\n    setFormValues((prevValues) => ({ ...prevValues, [id]: value }));\n  };\n\n  const {\n    fullName,\n    email,\n    confirmEmail,\n    password,\n    confirmPassword,\n  } = formValues;\n\n\n  return (\n    <div className='bg-black bg-opacity-75 absolute z-10 h-screen w-full top-0 left-0'>\n      <FontAwesomeIcon\n        className='text-2xl text-white absolute right-7 top-3'\n        icon={faTimes}\n        onClick={props.onCloseOverlayClick}\n      />\n      <form\n        className='w-3/4  m-auto relative top-1/2 transform -translate-y-2/4'\n        onSubmit={handleSubmit}\n        method='post'\n      >\n        <h3 className='text-white text-2xl pb-5'>Create your Account</h3>\n\n        {props.parentJson.registrationErrors ? (\n          <h3 className='text-red-900  text-1xl mb-5 w-3/4'>\n            {props.parentJson.registrationErrors}\n          </h3>\n        ) : null}\n        {props.parentJson.registeredUserExist ? (\n          <h3 className='text-red-900  text-1xl mb-5 w-3/4 '>\n            {props.parentJson.registeredUserExist}\n          </h3>\n        ) : null}\n        {props.parentJson.registrationLogInReady ? (\n          <h3 className='text-green-500 text-1xl mb-5 '>\n            {props.parentJson.registrationLogInReady}\n          </h3>\n        ) : null}\n        <div className='mb-9'>\n          <label className='block text-white font-bold' htmlFor='email'>\n            Name(First and Last):\n          </label>\n          <input\n            className='text-black font-medium '\n            type='text'\n            name='fullName'\n            id='fullName'\n            value={fullName || \"\"}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div className='my-3'>\n          <label className='block text-white font-bold' htmlFor='email'>\n            Email:\n          </label>\n          <input\n            className='text-black font-medium '\n            type='email'\n            name='email'\n            id='email'\n            value={email || \"\"}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div className='mb-9'>\n          <label className='block text-white font-bold' htmlFor='email2'>\n            Confirm Email:\n          </label>\n          <input\n            className='text-black font-medium '\n            type='email'\n            name='confirmEmail'\n            id='confirmEmail'\n            value={confirmEmail || \"\"}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div className='mb-3'>\n          <label className='block text-white font-bold' htmlFor='password'>\n            Password:\n          </label>\n          <input\n            className='text-black font-medium '\n            type='password'\n            name='password'\n            id='password'\n            value={password || \"\"}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div className=''>\n          <label className='block text-white font-bold' htmlFor='password2'>\n            Confirm Password:\n          </label>\n          <input\n            className='text-black font-medium '\n            type='password'\n            name='confirmPassword'\n            id='confirmPassword'\n            value={confirmPassword || \"\"}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div>\n          <button\n            type='submit'\n            className='border border-solid rounded-md border-black  px-2 py-1 border-opacity-30 my-4 bg-indigo-500 text-white font-bold'\n          >\n            Submit!\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default withRouter(SignUpOverlay);\n","/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/components/NavigationIcons.js",[],"/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/components/GrievanceForm.js",["89"],"import React, {useState} from \"react\";\nimport AddSubTask from \"./AddSubTask\";\n\nconst GrievanceForm = (props) => {\n  const { selectedEvent } = props;\nconst [formValues, setFormValues] = useState({});\nconst [resJson, setResJson] = useState({});\n\nconst handleInputChange = (e) => {\n  const { id, value } = e.target;\n  console.log(id, \": \", value);\n  setFormValues((prev) => ({ ...prev, [id]: value }));\n};\nconst handleSubmit = async (e) => {\n  e.preventDefault();\n\n  const {\n    meetingName,\n    meetingType,\n    meetingDate,\n    reminder,\n    extension,\n    description,\n  } = formValues;\n  if (!meetingName) {\n    setResJson({ errors: \"Please include a meeting name at the top.\" });\n  }\n  if (!meetingType) {\n    setResJson({ errors: \"Please include a Meeting Type\" });\n  }\n  if (!description) {\n    setResJson({ errors: \"Please include a description\" });\n  }\n\n  const response = await fetch(\"/add/meeting\", {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      meetingName,\n      meetingType,\n      meetingDate,\n      reminder,\n      extension,\n      description,\n    }),\n  });\n\n  const json = await response.json();\n\n  setResJson(json);\n\n  console.log(json, resJson, \"I submitted\");\n};\n  return (\n    <div className='bg-blue-100 px-3 pt-5 relative '>\n      <form\n        action='/add/meeting'\n        onSubmit={handleSubmit}\n        className='text-center'\n        method='post'\n      >\n        <input\n          type='submit'\n          className='text-1xl p-2 absolute right-0 top-2 bg-blue-400 border-2 rounded-lg'\n          value='Save'\n        />\n        {resJson.message && (\n          <h3 className='text-red-900 font-bold text-2xl relative bottom-2 text-center w-3/4 '>\n            {resJson.message}\n          </h3>\n        )}\n\n        <div className='mt-3 w-full flex space-x-3'>\n          <div className='relative top-6'>\n            <label className='block text-left font-bold' htmlFor='tasks'>\n              Event Type:{\" \"}\n            </label>\n            <select\n              className='bg-white w-full block h-7 '\n              name='meetingType'\n              id='meetingType'\n              onChange={handleInputChange}\n            >\n              <option value=''>Event Type?</option>\n              <option value='Member Interaction'>Member Interaction</option>\n              <option value='Incident'>Incident</option>\n              <option value='Step 1'>Step 1</option>\n              <option value='Step 2'>Step 2</option>\n              <option value='Step 2 to Arbitration'>\n                Step 2 to Arbitration\n              </option>\n              <option value='Step 3 Appeal'>Step 3 Appeal</option>\n              <option value='Miscellaneous'>Miscellaneous</option>\n            </select>\n          </div>\n          <div className=''>\n            <label className='text-left block font-bold' htmlFor='meetingDate'>\n              Actual Date of Meeting:\n            </label>\n            <input\n              className='w-full block'\n              type='date'\n              name='meetingDate'\n              id='meetingDate'\n              onChange={handleInputChange}\n            />\n          </div>\n        </div>\n        <div className='flex mt-3 relative w-full space-x-3'>\n          <div className='relative top-6'>\n            <label htmlFor='reminder' className='block text-left font-bold'>\n              Reminder:\n            </label>\n            <input\n              type='date'\n              name='reminder'\n              className='w-full bg-white block'\n              id='reminder'\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className='text-left'>\n            <label className='block font-bold' htmlFor='extension'>\n              Extension Date:<span className='block'>(If Applicable)</span>\n            </label>\n            <input\n              className='w-full block'\n              type='date'\n              name='extension'\n              id='extension'\n              onChange={handleInputChange}\n            />\n          </div>\n        </div>\n        <div className='mt-3 '>\n          <label\n            className='block w-full text-left font-bold'\n            htmlFor='description'\n          >\n            Description:\n          </label>\n          <textarea\n            name='description'\n            className='w-full'\n            cols='30'\n            rows='10'\n            id='description'\n            onChange={handleInputChange}\n          ></textarea>\n        </div>\n      </form>\n      <AddSubTask />\n    </div>\n  );\n};\n\nexport default GrievanceForm;\n","/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/components/MemberInteractionForm.js",["90"],"import React, { useState } from \"react\";\nimport AddSubTask from \"./AddSubTask\";\n\nconst MemberInteractionForm = (props) => {\n  let dateSelectOptions = () => {\n    let date = new Date();\n    let i;\n    for (i = 0; i <= 7; i++) {\n      if (i === 4 || i === 6) {\n        continue;\n      }\n      console.log(\"I'm trying at least\")\n      return (\n        <option\n          value={`${date.getMonth()}-${date.getDate()}-${date.getFullYear()}`}\n        >\n          {`Today ${\n            date.getMonth() + i\n          }-${date.getDate()}-${date.getFullYear()}`}\n        </option>\n      );\n    }\n  };\n\n  const { selectedEvent } = props;\n  const [formValues, setFormValues] = useState({});\n  const [resJson, setResJson] = useState({});\n\n  const handleInputChange = (e) => {\n    const { id, value } = e.target;\n    console.log(id, \": \", value);\n    setFormValues((prev) => ({ ...prev, [id]: value }));\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const {\n      meetingName,\n      meetingType,\n      meetingDate,\n      reminder,\n      extension,\n      description,\n    } = formValues;\n    if (!meetingName) {\n      setResJson({ errors: \"Please include a meeting name at the top.\" });\n    }\n    if (!meetingType) {\n      setResJson({ errors: \"Please include a Meeting Type\" });\n    }\n    if (!description) {\n      setResJson({ errors: \"Please include a description\" });\n    }\n\n    const response = await fetch(\"/add/meeting\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        meetingName,\n        meetingDate,\n        reminder,\n        description,\n      }),\n    });\n\n    const json = await response.json();\n\n    setResJson(json);\n\n    console.log(json, resJson, \"I submitted\");\n  };\n  return (\n    <div className='main-gradient px-3 pt-5 relative '>\n      <h3 className='font-bold'>Event Type: {selectedEvent.meetingType}</h3>\n      <form\n        action='/add/meeting'\n        onSubmit={handleSubmit}\n        className='text-center'\n        method='post'\n      >\n        <input\n          type='submit'\n          className='text-1xl p-2 absolute right-2 top-1  bg-blue-400 border-2 rounded-lg'\n          value='Save'\n        />\n        {resJson.message && (\n          <h3 className='text-red-900 font-bold text-2xl relative bottom-2 text-center w-3/4 '>\n            {resJson.message}\n          </h3>\n        )}\n\n        <div className='mt-3 flex space-x-3'>\n          <div className='mb-3'>\n            <label\n              className='text-left block font-bold'\n              htmlFor='meetingDate'\n            ></label>\n            <input\n              className='block'\n              type='text'\n              name='meetingName'\n              id='meetingName'\n              value={props.selectedEvent.meetingName}\n              onChange={handleInputChange}\n            />\n          </div>\n        </div>\n        <div className='mt-3 flex space-x-3'>\n          <div className='mb-3'>\n            <label className='text-left block font-bold' htmlFor='meetingDate'>\n              Date of Interaction:\n            </label>\n            <input\n              className='block'\n              type='date'\n              name='meetingDate'\n              id='meetingDate'\n              onChange={handleInputChange}\n            />\n          </div>\n        </div>\n        <div className='flex'>\n          <div className='mb-5'>\n            <label htmlFor='reminder' className='block text-left font-bold'>\n              Reminder:\n            </label>\n            <input\n              type='date'\n              name='reminder'\n              className='w-full bg-white block'\n              id='reminder'\n              onChange={handleInputChange}\n            />\n          </div>\n        </div>\n        <div className='flex w-full'>\n          <select name='dates_for_reminder' id='dates_for_reminder'>\n            {dateSelectOptions}\n          </select>\n        </div>\n        <div className='mt-3 '>\n          <label\n            className='block w-full text-left font-bold'\n            htmlFor='description'\n          >\n            Description:\n          </label>\n          <textarea\n            name='description'\n            className='w-full'\n            cols='30'\n            rows='10'\n            id='description'\n            value={props.selectedEvent.description}\n            onChange={handleInputChange}\n          ></textarea>\n        </div>\n      </form>\n      <AddSubTask />\n    </div>\n  );\n};\n\nexport default MemberInteractionForm;\n","/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/components/NavigationSearchBar.js",[],"/home/cerui/Documents/Web Stuff/GMIC/Grievance-and-Member-Interactions-Tracker/src/client/components/AddSubTask.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":24},{"ruleId":"99","severity":1,"message":"100","line":20,"column":9,"nodeType":"101","messageId":"102","endLine":20,"endColumn":59,"fix":"103"},{"ruleId":"104","severity":1,"message":"105","line":48,"column":6,"nodeType":"106","endLine":48,"endColumn":8,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":54,"column":5,"nodeType":"110","messageId":"111","endLine":83,"endColumn":6},{"ruleId":"95","severity":1,"message":"112","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"113","line":1,"column":27,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"114","severity":1,"message":"115","line":35,"column":15,"nodeType":"116","endLine":35,"endColumn":57},{"ruleId":"114","severity":1,"message":"115","line":46,"column":13,"nodeType":"116","endLine":46,"endColumn":55},{"ruleId":"114","severity":1,"message":"115","line":56,"column":13,"nodeType":"116","endLine":56,"endColumn":55},{"ruleId":"114","severity":1,"message":"115","line":66,"column":13,"nodeType":"116","endLine":66,"endColumn":55},{"ruleId":"114","severity":1,"message":"115","line":76,"column":13,"nodeType":"116","endLine":76,"endColumn":55},{"ruleId":"114","severity":1,"message":"115","line":86,"column":13,"nodeType":"116","endLine":86,"endColumn":55},{"ruleId":"114","severity":1,"message":"115","line":96,"column":13,"nodeType":"116","endLine":96,"endColumn":55},{"ruleId":"95","severity":1,"message":"112","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"117","line":6,"column":10,"nodeType":"97","messageId":"98","endLine":6,"endColumn":20},{"ruleId":"95","severity":1,"message":"118","line":8,"column":10,"nodeType":"97","messageId":"98","endLine":8,"endColumn":25},{"ruleId":"95","severity":1,"message":"119","line":18,"column":9,"nodeType":"97","messageId":"98","endLine":18,"endColumn":21},{"ruleId":"95","severity":1,"message":"113","line":1,"column":27,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"120","line":20,"column":9,"nodeType":"101","messageId":"102","endLine":20,"endColumn":59,"fix":"121"},{"ruleId":"99","severity":1,"message":"120","line":27,"column":9,"nodeType":"101","messageId":"102","endLine":27,"endColumn":62,"fix":"122"},{"ruleId":"99","severity":1,"message":"120","line":34,"column":9,"nodeType":"101","messageId":"102","endLine":34,"endColumn":78,"fix":"123"},{"ruleId":"95","severity":1,"message":"124","line":5,"column":11,"nodeType":"97","messageId":"98","endLine":5,"endColumn":24},{"ruleId":"95","severity":1,"message":"125","line":42,"column":7,"nodeType":"97","messageId":"98","endLine":42,"endColumn":16},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'NavLogoContainer' is defined but never used.","Identifier","unusedVar","no-useless-computed-key","Unnecessarily computed property [\"errors\"] found.","Property","unnecessarilyComputedProperty",{"range":"128","text":"129"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleUserAuthorization' and 'resJson.accessToken'. Either include them or remove the dependency array.","ArrayExpression",["130"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'formValues' is assigned a value but never used.","'isAddNewClicked' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","Unnecessarily computed property [\"registrationErrors\"] found.",{"range":"131","text":"132"},{"range":"133","text":"132"},{"range":"134","text":"132"},"'selectedEvent' is assigned a value but never used.","'extension' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[659,669],"\"errors\"",{"desc":"135","fix":"136"},[631,653],"\"registrationErrors\"",[813,835],[1019,1041],"Update the dependencies array to be: [handleUserAuthorization, resJson.accessToken]",{"range":"137","text":"138"},[1305,1307],"[handleUserAuthorization, resJson.accessToken]"]