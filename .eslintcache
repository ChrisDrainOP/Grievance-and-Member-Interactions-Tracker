[{"C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\index.js":"1","C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\containers\\App.js":"2","C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\containers\\GrievanceListContainer.js":"3","C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\containers\\GrievanceTableContainer.js":"4","C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\containers\\GrievanceFormContainer.js":"5","C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\components\\LogOnForm.js":"6","C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\components\\NavigationLogoContainer.js":"7","C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\components\\NavigationIcons.js":"8","C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\components\\GrievanceForm.js":"9","C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\components\\NavigationSearchBar.js":"10","C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\components\\AddSubTask.js":"11","C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\containers\\HomePage.js":"12","C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\components\\SignUpOverLay.js":"13","C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\components\\SignUpOverlay.js":"14","C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\components\\MemberInteractionForm.js":"15"},{"size":294,"mtime":1614359222718,"results":"16","hashOfConfig":"17"},{"size":2849,"mtime":1615379423601,"results":"18","hashOfConfig":"17"},{"size":4594,"mtime":1615380086969,"results":"19","hashOfConfig":"17"},{"size":4217,"mtime":1616331801342,"results":"20","hashOfConfig":"17"},{"size":677,"mtime":1616325595274,"results":"21","hashOfConfig":"17"},{"size":6148,"mtime":1615379442283,"results":"22","hashOfConfig":"17"},{"size":545,"mtime":1615379881483,"results":"23","hashOfConfig":"17"},{"size":2296,"mtime":1615379995545,"results":"24","hashOfConfig":"17"},{"size":4766,"mtime":1616320836680,"results":"25","hashOfConfig":"17"},{"size":556,"mtime":1612754721535,"results":"26","hashOfConfig":"17"},{"size":1898,"mtime":1616321124733,"results":"27","hashOfConfig":"17"},{"size":4609,"mtime":1616325557926,"results":"28","hashOfConfig":"17"},{"size":2693,"mtime":1613519995453,"results":"29","hashOfConfig":"17"},{"size":5434,"mtime":1614844541154,"results":"30","hashOfConfig":"17"},{"size":4687,"mtime":1616521660078,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1aqdepc",{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"68","usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},"C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\index.js",[],["72","73"],"C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\containers\\App.js",["74","75","76"],"import React, { useState, useEffect } from \"react\";\r\nimport HomePage from \"./HomePage\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport NavLogoContainer from \"../components/NavigationLogoContainer\";\r\nimport LogOnForm from \"../components/LogOnForm\";\r\n\r\nfunction App({ history, ...props }) {\r\n  //Handle User login\r\n  const [formValues, setFormValues] = useState({});\r\n  const [resJson, setResJson] = useState({});\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { emailLogIn, passwordLogIn } = formValues;\r\n\r\n    if (!emailLogIn || !passwordLogIn) {\r\n      return setResJson((prev) => ({\r\n        ...prev,\r\n        [\"errors\"]: \"Please fill out both fields to login\",\r\n      }));\r\n    }\r\n\r\n    const res = await fetch(\"/users/login\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ emailLogIn, passwordLogIn }),\r\n    });\r\n    const json = await res.json();\r\n\r\n    setResJson(json);\r\n\r\n    if (json.accessToken) {\r\n      history.push(\"/home\");\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setFormValues((prevValues) => ({ ...prevValues, [id]: value }));\r\n  };\r\n  useEffect(() => {\r\n    if (!resJson.accessToken) {\r\n      handleUserAuthorization();\r\n    }\r\n  }, []);\r\n\r\n  const handleUserAuthorization = async () => {\r\n    const response = await fetch(\"/home/token\", {\r\n      method: \"GET\",\r\n      \"Content-Type\": \"application.json\",\r\n      credentials: \"same-origin\",\r\n      \"X-Content-Type-Options\": \"nosniff\",\r\n    });\r\n\r\n    const json = await response.json();\r\n\r\n    setResJson(json);\r\n\r\n    if (json.accessToken) {\r\n      history.push(\"/home\");\r\n    }\r\n  };\r\n  return (\r\n    <div className='font-source-serif'>\r\n      <div>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <LogOnForm\r\n              history={history}\r\n              resJson={resJson}\r\n              sendParentJson={setResJson}\r\n              handleInputChange={handleInputChange}\r\n              handleSubmit={handleSubmit}\r\n            />\r\n          </Route>\r\n          <PrivateRoute resJson={resJson} path='/home'>\r\n            <HomePage history={history} />\r\n          </PrivateRoute>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n\r\n// A wrapper for <Route> that redirects to the login\r\n// screen if you're not yet authenticated.\r\nfunction PrivateRoute({ children, ...rest }) {\r\n  let auth = rest.resJson;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        auth.accessToken ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\containers\\GrievanceListContainer.js",["77","78","79","80","81","82","83","84","85"],"import React, { useState, useEffect } from \"react\";\r\nimport NavLogoContainer from \"../components/NavigationLogoContainer\";\r\nimport NavigationIcons from \"../components/NavigationIcons.js\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst GrievanceListContainer = (props) => {\r\n  \r\n  return (\r\n    <div className='main-gradient h-screen'>\r\n      <NavLogoContainer />\r\n      <div className='w-full text-center my-3'>\r\n        <h3 className='relative text-blue-900 font-bold'>\r\n          Welcome {props.displayName}\r\n          {props.image ? (\r\n            <img\r\n              className='h-7 w-7 rounded-full absolute right-10 -top-1'\r\n              src={props.image}\r\n              alt='User profile from google'\r\n            />\r\n          ) : null}\r\n        </h3>\r\n      </div>\r\n      <NavigationIcons />\r\n      <div className='mx-1 pb-2 mt-5'>\r\n        <ol className='flex flex-col space-y-2 w-3/4 m-auto'>\r\n          <li className='justify-procedure-list'>\r\n            <div className='relative'>\r\n              <FontAwesomeIcon\r\n                className='absolute -left-3 top-1'\r\n                icon={faAngleRight}\r\n              />\r\n              <a onClick={props.handleMeetingListClick}>\r\n                <p className='inline-block' id='total'>\r\n                  Inbox Total\r\n                </p>\r\n              </a>\r\n            </div>\r\n            <span className='task-number-icon-blue'>\r\n              {props.meetings.length}\r\n            </span>\r\n          </li>\r\n          <li className='justify-procedure-list'>\r\n            <a onClick={props.handleMeetingListClick}>\r\n              <p className='inline-block' id='incidentsAndInteractions'>\r\n                Incidents and Interactions\r\n              </p>\r\n            </a>\r\n            <span className='task-number-icon-blue'>\r\n              {props.incidentsAndInteractions.length}\r\n            </span>\r\n          </li>\r\n          <li className='justify-procedure-list' id='stepOnes'>\r\n            <a onClick={props.handleMeetingListClick}>\r\n              <p className='inline-block' id='stepOnes'>\r\n                Step 1\r\n              </p>\r\n            </a>\r\n            <span className='task-number-icon-blue'>\r\n              {props.stepOnes.length}\r\n            </span>\r\n          </li>\r\n          <li className='justify-procedure-list'>\r\n            <a onClick={props.handleMeetingListClick}>\r\n              <p className='inline-block' id='stepTwos'>\r\n                Step 2\r\n              </p>\r\n            </a>\r\n            <span className='task-number-icon-blue'>\r\n              {props.stepTwos.length}\r\n            </span>\r\n          </li>\r\n          <li className='justify-procedure-list'>\r\n            <a onClick={props.handleMeetingListClick}>\r\n              <p className='inline-block' id='stepTwoToArbitration'>\r\n                Step 2 to Arbitration\r\n              </p>\r\n            </a>\r\n            <span className='task-number-icon-blue'>\r\n              {props.stepTwoToArbitrations.length}\r\n            </span>\r\n          </li>\r\n          <li className='justify-procedure-list'>\r\n            <a onClick={props.handleMeetingListClick}>\r\n              <p className='inline-block' id='stepThreeAppeal'>\r\n                Step 3 Appeal\r\n              </p>\r\n            </a>\r\n            <span className='task-number-icon-blue'>\r\n              {props.stepThreeAppeal.length}\r\n            </span>\r\n          </li>\r\n          <li className='justify-procedure-list'>\r\n            <a onClick={props.handleMeetingListClick}>\r\n              <p className='inline-block' id='miscellaneous'>\r\n                Miscellaneous\r\n              </p>\r\n            </a>\r\n            <span className='task-number-icon-blue'>\r\n              {props.miscellaneous.length}\r\n            </span>\r\n          </li>\r\n        </ol>\r\n        <div className='mt-3 mx-1 pb-2'>\r\n          <ol className='w-3/4 m-auto'>\r\n            <div>\r\n              <input type='checkbox' name='today' className='' />\r\n              <li className='inline-block ml-2'>Today</li>\r\n            </div>\r\n            <div>\r\n              <input type='checkbox' name='next week' className='' />\r\n              <li className='inline-block ml-2'>Next 5 days</li>\r\n            </div>\r\n            <div>\r\n              <input type='checkbox' name='next week' className='' />\r\n              <li className='inline-block ml-2'>Next 14 days</li>\r\n            </div>\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GrievanceListContainer;\r\n","C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\containers\\GrievanceTableContainer.js",["86"],"import React, {useState} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst GrievanceTableContainer = (props) => {\r\n  const [showAddNewForm, setShowAddNewForm] = useState('hidden')\r\n  const [isAddNewClicked, setIsAddNewClicked] = useState(false);\r\n  const handleIsAddNewClicked = () => {\r\n    setIsAddNewClicked(true)\r\n    setShowAddNewForm(\"block\")\r\n  }\r\n  const handleIsResetClicked = () => {\r\n    setIsAddNewClicked(false)\r\n    setShowAddNewForm(\"hidden\")\r\n  }\r\n  let events = props.listType;\r\n\r\n  const listOfEvents = events.map((event) => {\r\n    \r\n    function eventDate(date) {\r\n      return new Date(date).toDateString();\r\n    }\r\n\r\n    return (\r\n      <li\r\n        onClick={() => props.handleEventRowClick(event)}\r\n        key={event._id}\r\n        className='my-2 w-full'\r\n      >\r\n        <label\r\n          for={event._id}\r\n          className='relative left-2 text-sm inline-block w-3/5'\r\n        >\r\n          <span>\r\n            <input\r\n              type='radio'\r\n              name='event'\r\n              id={`${event._id}`}\r\n              value={`${event._id}`}\r\n              className='mr-3'\r\n            />\r\n          </span>\r\n          {event.meetingName}\r\n        </label>\r\n        <label\r\n          for={event._id}\r\n          className='text-center text-sm inline-block w-2/5'\r\n        >\r\n          {event.actualDateOfEvent\r\n            ? eventDate(event.actualDateOfEvent)\r\n            : \"Unknown\"}\r\n        </label>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className='h-screen bg-blue-300'>\r\n      <div className='flex py-4'>\r\n        <div className='border-black ml-4'>\r\n          <button className='mb-2' onClick={handleIsAddNewClicked}>\r\n            <FontAwesomeIcon className='block relative left-6' icon={faPlus} />\r\n            <span className='font-bold block'>Add New</span>\r\n          </button>\r\n          <form className={`${showAddNewForm}`}>\r\n            <div className='text-left'>\r\n              <label htmlFor='meetingName' className='inline-block'></label>\r\n              <input\r\n                type='text'\r\n                name='meetingName'\r\n                placeholder='Add Event Name'\r\n                className='inline-block bg-white mb-2 pl-1 font-bold'\r\n                onClick=\"\"\r\n                id='meetingName'\r\n              />\r\n            </div>\r\n            <div className=''>\r\n              <label\r\n                className='block text-left font-bold'\r\n                htmlFor='tasks'\r\n              ></label>\r\n              <select className='bg-white ' name='meetingType' id='meetingType'>\r\n                <option value=''>Event Type?</option>\r\n                <option value='Member Interaction'>Member Interaction</option>\r\n                <option value='Incident'>Incident</option>\r\n                <option value='Step 1'>Step 1</option>\r\n                <option value='Step 2'>Step 2</option>\r\n                <option value='Step 2 to Arbitration'>\r\n                  Step 2 to Arbitration\r\n                </option>\r\n                <option value='Step 3 Appeal'>Step 3 Appeal</option>\r\n                <option value='Miscellaneous'>Miscellaneous</option>\r\n              </select>\r\n              <button\r\n                className='bg-blue-400 ml-3 px-2 p-1 rounded-lg '\r\n                type='submit'\r\n              >\r\n                Save\r\n              </button>\r\n              <button\r\n              onClick={handleIsResetClicked} type='reset' className='bg-purple-400 rounded-lg p-1 px-2 ml-2'>Reset</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className='text-md font-bold ml-5 mb-3'>\r\n        <h3 className='inline-block'>\r\n          {props.listName ? props.listName : \"View Meetings\"}\r\n        </h3>\r\n      </div>\r\n\r\n      <div>\r\n        <ol className='w-full' id='checkboxes'>\r\n          <div className=' w-full flex'>\r\n            <h6 className='w-1/2 text-center'>Description</h6>\r\n            <h6 className='w-1/2 text-center'>Date of Event</h6>\r\n          </div>\r\n          {listOfEvents}\r\n        </ol>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GrievanceTableContainer;\r\n","C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\containers\\GrievanceFormContainer.js",["87"],"import React, { useState } from \"react\";\r\nimport MemberInteractionForm from \"../components/MemberInteractionForm\";\r\nimport GrievanceForm from \"../components/GrievanceForm\";\r\n\r\nconst GrievanceFormContainer = ({ selectedEvent }) => {\r\n  console.log(\"selected event in form\", selectedEvent);\r\n\r\n  return (\r\n    <div className='w-full h-screen'>\r\n      {selectedEvent.meetingType === \"Member Interaction\" ? (\r\n        <MemberInteractionForm selectedEvent={selectedEvent} />\r\n      ) : null}\r\n      {selectedEvent.meetingType === \"Step 1\" ? (\r\n        <GrievanceForm selectedEvent={selectedEvent} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GrievanceFormContainer;\r\n","C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\components\\LogOnForm.js",[],"C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\components\\NavigationLogoContainer.js",[],"C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\components\\NavigationIcons.js",[],"C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\components\\GrievanceForm.js",["88"],"import React, {useState} from \"react\";\r\nimport AddSubTask from \"./AddSubTask\";\r\n\r\nconst GrievanceForm = (props) => {\r\n  const { selectedEvent } = props;\r\nconst [formValues, setFormValues] = useState({});\r\nconst [resJson, setResJson] = useState({});\r\n\r\nconst handleInputChange = (e) => {\r\n  const { id, value } = e.target;\r\n  console.log(id, \": \", value);\r\n  setFormValues((prev) => ({ ...prev, [id]: value }));\r\n};\r\nconst handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  const {\r\n    meetingName,\r\n    meetingType,\r\n    meetingDate,\r\n    reminder,\r\n    extension,\r\n    description,\r\n  } = formValues;\r\n  if (!meetingName) {\r\n    setResJson({ errors: \"Please include a meeting name at the top.\" });\r\n  }\r\n  if (!meetingType) {\r\n    setResJson({ errors: \"Please include a Meeting Type\" });\r\n  }\r\n  if (!description) {\r\n    setResJson({ errors: \"Please include a description\" });\r\n  }\r\n\r\n  const response = await fetch(\"/add/meeting\", {\r\n    method: \"post\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      meetingName,\r\n      meetingType,\r\n      meetingDate,\r\n      reminder,\r\n      extension,\r\n      description,\r\n    }),\r\n  });\r\n\r\n  const json = await response.json();\r\n\r\n  setResJson(json);\r\n\r\n  console.log(json, resJson, \"I submitted\");\r\n};\r\n  return (\r\n    <div className='bg-blue-100 px-3 pt-5 relative '>\r\n      <form\r\n        action='/add/meeting'\r\n        onSubmit={handleSubmit}\r\n        className='text-center'\r\n        method='post'\r\n      >\r\n        <input\r\n          type='submit'\r\n          className='text-1xl p-2 absolute right-0 top-2 bg-blue-400 border-2 rounded-lg'\r\n          value='Save'\r\n        />\r\n        {resJson.message && (\r\n          <h3 className='text-red-900 font-bold text-2xl relative bottom-2 text-center w-3/4 '>\r\n            {resJson.message}\r\n          </h3>\r\n        )}\r\n\r\n        <div className='mt-3 w-full flex space-x-3'>\r\n          <div className='relative top-6'>\r\n            <label className='block text-left font-bold' htmlFor='tasks'>\r\n              Event Type:{\" \"}\r\n            </label>\r\n            <select\r\n              className='bg-white w-full block h-7 '\r\n              name='meetingType'\r\n              id='meetingType'\r\n              onChange={handleInputChange}\r\n            >\r\n              <option value=''>Event Type?</option>\r\n              <option value='Member Interaction'>Member Interaction</option>\r\n              <option value='Incident'>Incident</option>\r\n              <option value='Step 1'>Step 1</option>\r\n              <option value='Step 2'>Step 2</option>\r\n              <option value='Step 2 to Arbitration'>\r\n                Step 2 to Arbitration\r\n              </option>\r\n              <option value='Step 3 Appeal'>Step 3 Appeal</option>\r\n              <option value='Miscellaneous'>Miscellaneous</option>\r\n            </select>\r\n          </div>\r\n          <div className=''>\r\n            <label className='text-left block font-bold' htmlFor='meetingDate'>\r\n              Actual Date of Meeting:\r\n            </label>\r\n            <input\r\n              className='w-full block'\r\n              type='date'\r\n              name='meetingDate'\r\n              id='meetingDate'\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='flex mt-3 relative w-full space-x-3'>\r\n          <div className='relative top-6'>\r\n            <label htmlFor='reminder' className='block text-left font-bold'>\r\n              Reminder:\r\n            </label>\r\n            <input\r\n              type='date'\r\n              name='reminder'\r\n              className='w-full bg-white block'\r\n              id='reminder'\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <div className='text-left'>\r\n            <label className='block font-bold' htmlFor='extension'>\r\n              Extension Date:<span className='block'>(If Applicable)</span>\r\n            </label>\r\n            <input\r\n              className='w-full block'\r\n              type='date'\r\n              name='extension'\r\n              id='extension'\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='mt-3 '>\r\n          <label\r\n            className='block w-full text-left font-bold'\r\n            htmlFor='description'\r\n          >\r\n            Description:\r\n          </label>\r\n          <textarea\r\n            name='description'\r\n            className='w-full'\r\n            cols='30'\r\n            rows='10'\r\n            id='description'\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n        </div>\r\n      </form>\r\n      <AddSubTask />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GrievanceForm;\r\n","C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\components\\NavigationSearchBar.js",[],"C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\components\\AddSubTask.js",[],"C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\containers\\HomePage.js",["89"],"import { React, useState, useEffect } from \"react\";\r\nimport GrievanceListContainer from \"./GrievanceListContainer.js\";\r\nimport GrievanceTableContainer from \"./GrievanceTableContainer\";\r\nimport GrievanceFormContainer from \"./GrievanceFormContainer\";\r\n\r\n\r\nconst HomePage = ({ history, ...props }) => {\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [meetings, setMeetings] = useState([]);\r\n  const [listType, setListType] = useState([]);\r\n  const [listName, setListName] = useState(\"\");\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n\r\n  //Profile information is brought in from /server/routers/index.js\r\n\r\n  useEffect(() => {\r\n    loadProfile();\r\n    loadMeetings();\r\n  }, []);\r\n\r\n  const loadProfile = async () => {\r\n    const response = await fetch(\"/home/token\", {\r\n      method: \"GET\",\r\n      credentials: \"same-origin\",\r\n    });\r\n    const data = await response.json();\r\n\r\n    //Show the currents user name and display image\r\n    setDisplayName(\r\n      data.displayName\r\n        .toLowerCase()\r\n        .replace(/(\\w{1})(\\w+)/g, function replacer(match, p1, p2) {\r\n          return [p1.toUpperCase(), p2, \" \"].join(\"\");\r\n        })\r\n    );\r\n    setImage(data.image);\r\n  };\r\n\r\n  //Load all user meetings from the Databas\r\n  const loadMeetings = async () => {\r\n    let response = await fetch(\"home/meetings\", {\r\n      method: \"GET\",\r\n      credentials: \"same-origin\",\r\n    });\r\n\r\n    let data = await response.json();\r\n    console.log(data.userTasks, \"heres the data from /home/meetings\");\r\n\r\n    setMeetings([...data.userTasks]);\r\n  };\r\n\r\n  const handleMeetingListClick = (e) => {\r\n    switch (e.target.id) {\r\n      case \"total\":\r\n        setListType(meetings);\r\n        setListName(\"View All\");\r\n        break;\r\n      case \"incidentsAndInteractions\":\r\n        setListType(incidentsAndInteractions);\r\n        setListName(\"Incidents and Interactions\");\r\n        break;\r\n      case \"stepOnes\":\r\n        setListType(stepOnes);\r\n        setListName(\"Step 1 Events\");\r\n        break;\r\n      case \"stepTwos\":\r\n        setListType(stepTwos);\r\n        setListName(\"Step 2 Events\");\r\n        break;\r\n      case \"stepTwoToArbitration\":\r\n        setListType(stepTwoToArbitrations);\r\n        setListName(\"Step 2 to Arbitration Events\");\r\n        break;\r\n      case \"stepThreeAppeal\":\r\n        setListType(stepThreeAppeal);\r\n        setListName(\"Step 3 to Appeal Events\");\r\n        break;\r\n      case \"miscellaneous\":\r\n        setListType(miscellaneous);\r\n        setListName(\"Miscellaneous Events\");\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleEventRowClick = (event) => {\r\n    setSelectedEvent(event);\r\n  };\r\n\r\n\r\n  let incidentsAndInteractions = meetings.reduce((acc, cur) => {\r\n    if (\r\n      cur.meetingType === \"Member Interaction\" ||\r\n      cur.meetingType === \"Incident\"\r\n    ) {\r\n      acc.push(cur);\r\n    }\r\n    return acc;\r\n  }, []);\r\n\r\n  let stepOnes = meetings.reduce((acc, cur) => {\r\n    if (cur.meetingType === \"Step 1\") {\r\n      acc.push(cur);\r\n    }\r\n    return acc;\r\n  }, []);\r\n\r\n  let stepTwos = meetings.reduce((acc, cur) => {\r\n    if (cur.meetingType === \"Step 2\") {\r\n      acc.push(cur);\r\n    }\r\n    return acc;\r\n  }, []);\r\n\r\n  let stepTwoToArbitrations = meetings.reduce((acc, cur) => {\r\n    if (cur.meetingType === \"Step 2 to Arbitration\") {\r\n      acc.push(cur);\r\n    }\r\n    return acc;\r\n  }, []);\r\n\r\n  let stepThreeAppeal = meetings.reduce((acc, cur) => {\r\n    if (cur.meetingType === \"Step 3 Appeal\") {\r\n      acc.push(cur);\r\n    }\r\n    return acc;\r\n  }, []);\r\n\r\n  let miscellaneous = meetings.reduce((acc, cur) => {\r\n    if (cur.meetingType === \"Miscellaneous\") {\r\n      acc.push(cur);\r\n    }\r\n    return acc;\r\n  }, []);\r\n  return (\r\n    /*This component contains the entire app*/\r\n    <div className='main-gradient pt-2'>\r\n      <GrievanceListContainer\r\n        displayName={displayName}\r\n        image={image}\r\n        meetings={meetings}\r\n        handleMeetingListClick={handleMeetingListClick}\r\n        incidentsAndInteractions={incidentsAndInteractions}\r\n        stepOnes={stepOnes}\r\n        stepTwos={stepTwos}\r\n        stepTwoToArbitrations={stepTwoToArbitrations}\r\n        stepThreeAppeal={stepThreeAppeal}\r\n        miscellaneous={miscellaneous}\r\n      />\r\n      <GrievanceTableContainer\r\n        listType={listType}\r\n        listName={listName}\r\n        handleEventRowClick={handleEventRowClick}\r\n        selectedEvent={selectedEvent}\r\n      />\r\n      {selectedEvent ? (\r\n        <GrievanceFormContainer selectedEvent={selectedEvent} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\components\\SignUpOverLay.js",[],["90","91"],"C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\components\\SignUpOverlay.js",["92","93","94","95"],"import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst SignUpOverlay = ({history ,...props}) => {\r\n \r\n  const [formValues, setFormValues] = useState({});\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(\"got here submit==>>\", formValues);\r\n\r\n    const { email, confirmEmail, password, confirmPassword } = formValues;\r\n\r\n    if (email !== confirmEmail) {\r\n      return props.sendParentJson((prev) => ({\r\n        ...prev,\r\n        [\"registrationErrors\"]: \"Email fields don't match\",\r\n      }));\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      return props.sendParentJson((prev) => ({\r\n        ...prev,\r\n        [\"registrationErrors\"]: \"Password fields don't match\",\r\n      }));\r\n    }\r\n\r\n    if (password.length < 6 || confirmPassword.length < 6) {\r\n      return props.sendParentJson((prev) => ({\r\n        ...prev,\r\n        [\"registrationErrors\"]: \"Password should be longer than 6 characters\",\r\n      }));\r\n    }\r\n\r\n    const res = await fetch(\"/users/register\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email, fullName, password }),\r\n    });\r\n    const json = await res.json();\r\n\r\n    props.sendParentJson(json);\r\n    \r\n    if (json.accessToken) {\r\n      history.push(\"/home\");\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setFormValues((prevValues) => ({ ...prevValues, [id]: value }));\r\n  };\r\n\r\n  const {\r\n    fullName,\r\n    email,\r\n    confirmEmail,\r\n    password,\r\n    confirmPassword,\r\n  } = formValues;\r\n\r\n\r\n  return (\r\n    <div className='bg-black bg-opacity-75 absolute z-10 h-screen w-full top-0 left-0'>\r\n      <FontAwesomeIcon\r\n        className='text-2xl text-white absolute right-7 top-3'\r\n        icon={faTimes}\r\n        onClick={props.onCloseOverlayClick}\r\n      />\r\n      <form\r\n        className='w-3/4  m-auto relative top-1/2 transform -translate-y-2/4'\r\n        onSubmit={handleSubmit}\r\n        method='post'\r\n      >\r\n        <h3 className='text-white text-2xl pb-5'>Create your Account</h3>\r\n\r\n        {props.parentJson.registrationErrors ? (\r\n          <h3 className='text-red-900  text-1xl mb-5 w-3/4'>\r\n            {props.parentJson.registrationErrors}\r\n          </h3>\r\n        ) : null}\r\n        {props.parentJson.registeredUserExist ? (\r\n          <h3 className='text-red-900  text-1xl mb-5 w-3/4 '>\r\n            {props.parentJson.registeredUserExist}\r\n          </h3>\r\n        ) : null}\r\n        {props.parentJson.registrationLogInReady ? (\r\n          <h3 className='text-green-500 text-1xl mb-5 '>\r\n            {props.parentJson.registrationLogInReady}\r\n          </h3>\r\n        ) : null}\r\n        <div className='mb-9'>\r\n          <label className='block text-white font-bold' htmlFor='email'>\r\n            Name(First and Last):\r\n          </label>\r\n          <input\r\n            className='text-black font-medium '\r\n            type='text'\r\n            name='fullName'\r\n            id='fullName'\r\n            value={fullName || \"\"}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='my-3'>\r\n          <label className='block text-white font-bold' htmlFor='email'>\r\n            Email:\r\n          </label>\r\n          <input\r\n            className='text-black font-medium '\r\n            type='email'\r\n            name='email'\r\n            id='email'\r\n            value={email || \"\"}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='mb-9'>\r\n          <label className='block text-white font-bold' htmlFor='email2'>\r\n            Confirm Email:\r\n          </label>\r\n          <input\r\n            className='text-black font-medium '\r\n            type='email'\r\n            name='confirmEmail'\r\n            id='confirmEmail'\r\n            value={confirmEmail || \"\"}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='mb-3'>\r\n          <label className='block text-white font-bold' htmlFor='password'>\r\n            Password:\r\n          </label>\r\n          <input\r\n            className='text-black font-medium '\r\n            type='password'\r\n            name='password'\r\n            id='password'\r\n            value={password || \"\"}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=''>\r\n          <label className='block text-white font-bold' htmlFor='password2'>\r\n            Confirm Password:\r\n          </label>\r\n          <input\r\n            className='text-black font-medium '\r\n            type='password'\r\n            name='confirmPassword'\r\n            id='confirmPassword'\r\n            value={confirmPassword || \"\"}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <button\r\n            type='submit'\r\n            className='border border-solid rounded-md border-black  px-2 py-1 border-opacity-30 my-4 bg-indigo-500 text-white font-bold'\r\n          >\r\n            Submit!\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SignUpOverlay);\r\n","C:\\Users\\drain\\Web Sites\\Grievance Tracker\\g-tracker\\src\\client\\components\\MemberInteractionForm.js",["96"],"import React, { useState } from \"react\";\r\nimport AddSubTask from \"./AddSubTask\";\r\n\r\nconst MemberInteractionForm = (props) => {\r\n  let dateSelectOptions = () => {\r\n    let date = new Date();\r\n    let i;\r\n    for (i = 0; i <= 7; i++) {\r\n      if (i === 4 || i === 6) {\r\n        continue;\r\n      }\r\n      console.log(\"I'm trying at least\")\r\n      return (\r\n        <option\r\n          value={`${date.getMonth()}-${date.getDate()}-${date.getFullYear()}`}\r\n        >\r\n          {`Today ${\r\n            date.getMonth() + i\r\n          }-${date.getDate()}-${date.getFullYear()}`}\r\n        </option>\r\n      );\r\n    }\r\n  };\r\n\r\n  const { selectedEvent } = props;\r\n  const [formValues, setFormValues] = useState({});\r\n  const [resJson, setResJson] = useState({});\r\n\r\n  const handleInputChange = (e) => {\r\n    const { id, value } = e.target;\r\n    console.log(id, \": \", value);\r\n    setFormValues((prev) => ({ ...prev, [id]: value }));\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      meetingName,\r\n      meetingType,\r\n      meetingDate,\r\n      reminder,\r\n      extension,\r\n      description,\r\n    } = formValues;\r\n    if (!meetingName) {\r\n      setResJson({ errors: \"Please include a meeting name at the top.\" });\r\n    }\r\n    if (!meetingType) {\r\n      setResJson({ errors: \"Please include a Meeting Type\" });\r\n    }\r\n    if (!description) {\r\n      setResJson({ errors: \"Please include a description\" });\r\n    }\r\n\r\n    const response = await fetch(\"/add/meeting\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        meetingName,\r\n        meetingDate,\r\n        reminder,\r\n        description,\r\n      }),\r\n    });\r\n\r\n    const json = await response.json();\r\n\r\n    setResJson(json);\r\n\r\n    console.log(json, resJson, \"I submitted\");\r\n  };\r\n  return (\r\n    <div className='main-gradient px-3 pt-5 relative '>\r\n      <h3 className='font-bold'>Event Type: {selectedEvent.meetingType}</h3>\r\n      <form\r\n        action='/add/meeting'\r\n        onSubmit={handleSubmit}\r\n        className='text-center'\r\n        method='post'\r\n      >\r\n        <input\r\n          type='submit'\r\n          className='text-1xl p-2 absolute right-2 top-1  bg-blue-400 border-2 rounded-lg'\r\n          value='Save'\r\n        />\r\n        {resJson.message && (\r\n          <h3 className='text-red-900 font-bold text-2xl relative bottom-2 text-center w-3/4 '>\r\n            {resJson.message}\r\n          </h3>\r\n        )}\r\n\r\n        <div className='mt-3 flex space-x-3'>\r\n          <div className='mb-3'>\r\n            <label\r\n              className='text-left block font-bold'\r\n              htmlFor='meetingDate'\r\n            ></label>\r\n            <input\r\n              className='block'\r\n              type='text'\r\n              name='meetingName'\r\n              id='meetingName'\r\n              value={props.selectedEvent.meetingName}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='mt-3 flex space-x-3'>\r\n          <div className='mb-3'>\r\n            <label className='text-left block font-bold' htmlFor='meetingDate'>\r\n              Date of Interaction:\r\n            </label>\r\n            <input\r\n              className='block'\r\n              type='date'\r\n              name='meetingDate'\r\n              id='meetingDate'\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='flex'>\r\n          <div className='mb-5'>\r\n            <label htmlFor='reminder' className='block text-left font-bold'>\r\n              Reminder:\r\n            </label>\r\n            <input\r\n              type='date'\r\n              name='reminder'\r\n              className='w-full bg-white block'\r\n              id='reminder'\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='flex w-full'>\r\n          <select name='dates_for_reminder' id='dates_for_reminder'>\r\n            {dateSelectOptions}\r\n          </select>\r\n        </div>\r\n        <div className='mt-3 '>\r\n          <label\r\n            className='block w-full text-left font-bold'\r\n            htmlFor='description'\r\n          >\r\n            Description:\r\n          </label>\r\n          <textarea\r\n            name='description'\r\n            className='w-full'\r\n            cols='30'\r\n            rows='10'\r\n            id='description'\r\n            value={props.selectedEvent.description}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n        </div>\r\n      </form>\r\n      <AddSubTask />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemberInteractionForm;\r\n",{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":24},{"ruleId":"105","severity":1,"message":"106","line":20,"column":9,"nodeType":"107","messageId":"108","endLine":20,"endColumn":59,"fix":"109"},{"ruleId":"110","severity":1,"message":"111","line":48,"column":6,"nodeType":"112","endLine":48,"endColumn":8,"suggestions":"113"},{"ruleId":"101","severity":1,"message":"114","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"115","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"116","severity":1,"message":"117","line":35,"column":15,"nodeType":"118","endLine":35,"endColumn":57},{"ruleId":"116","severity":1,"message":"117","line":46,"column":13,"nodeType":"118","endLine":46,"endColumn":55},{"ruleId":"116","severity":1,"message":"117","line":56,"column":13,"nodeType":"118","endLine":56,"endColumn":55},{"ruleId":"116","severity":1,"message":"117","line":66,"column":13,"nodeType":"118","endLine":66,"endColumn":55},{"ruleId":"116","severity":1,"message":"117","line":76,"column":13,"nodeType":"118","endLine":76,"endColumn":55},{"ruleId":"116","severity":1,"message":"117","line":86,"column":13,"nodeType":"118","endLine":86,"endColumn":55},{"ruleId":"116","severity":1,"message":"117","line":96,"column":13,"nodeType":"118","endLine":96,"endColumn":55},{"ruleId":"101","severity":1,"message":"119","line":7,"column":10,"nodeType":"103","messageId":"104","endLine":7,"endColumn":25},{"ruleId":"101","severity":1,"message":"114","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"120","line":5,"column":11,"nodeType":"103","messageId":"104","endLine":5,"endColumn":24},{"ruleId":"121","severity":1,"message":"122","line":54,"column":5,"nodeType":"123","messageId":"124","endLine":83,"endColumn":6},{"ruleId":"97","replacedBy":"125"},{"ruleId":"99","replacedBy":"126"},{"ruleId":"101","severity":1,"message":"115","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"105","severity":1,"message":"127","line":20,"column":9,"nodeType":"107","messageId":"108","endLine":20,"endColumn":59,"fix":"128"},{"ruleId":"105","severity":1,"message":"127","line":27,"column":9,"nodeType":"107","messageId":"108","endLine":27,"endColumn":62,"fix":"129"},{"ruleId":"105","severity":1,"message":"127","line":34,"column":9,"nodeType":"107","messageId":"108","endLine":34,"endColumn":78,"fix":"130"},{"ruleId":"101","severity":1,"message":"131","line":42,"column":7,"nodeType":"103","messageId":"104","endLine":42,"endColumn":16},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'NavLogoContainer' is defined but never used.","Identifier","unusedVar","no-useless-computed-key","Unnecessarily computed property [\"errors\"] found.","Property","unnecessarilyComputedProperty",{"range":"134","text":"135"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleUserAuthorization' and 'resJson.accessToken'. Either include them or remove the dependency array.","ArrayExpression",["136"],"'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'isAddNewClicked' is assigned a value but never used.","'selectedEvent' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["132"],["133"],"Unnecessarily computed property [\"registrationErrors\"] found.",{"range":"137","text":"138"},{"range":"139","text":"138"},{"range":"140","text":"138"},"'extension' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[678,688],"\"errors\"",{"desc":"141","fix":"142"},[650,672],"\"registrationErrors\"",[839,861],[1052,1074],"Update the dependencies array to be: [handleUserAuthorization, resJson.accessToken]",{"range":"143","text":"144"},[1352,1354],"[handleUserAuthorization, resJson.accessToken]"]